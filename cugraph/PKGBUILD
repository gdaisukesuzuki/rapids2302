# Maintainer: Sven-Hendrik Haase <svenstaro@gmail.com>
# Contributor: bartus <arch-user-repoᘓbartus.33mail.com>
# Contributor: bartus <arch-user-repoᘓbartus.33mail.com>
# Contributor: pingplug <pingplug@foxmail.com>
# Contributor: cornholio <vigo.the.unholy.carpathian@gmail.com>

pkgname=(cugraph python-cugraph)
_pkgname=cugraph
# _pkgname2=hornet
pkgver=23.02
# _pkgver=22.10
_pkgver=22.12.00
pkgrel=6
pkgdesc="RAPIDS ML"
arch=('x86_64')
url="https://rapids.ai/"
license=('custom')
#depends=('curaft' 'cuda' 'cmake'  'spdlog' 'faiss'  'cudf' )
depends=('curaft' 'cuda' 'cmake'  'spdlog' 'faiss' 'cugraphops' 'cudf' )
# depends=('curaft' 'cuda' 'cmake'  'spdlog' 'faiss' 'gunrock' )
# depends=('clang' 'rapids-cudf' 'gcc8' 'cuda' 'cmake' 'nccl' 'python' 'cython' 'libcypher-parser-static')
# depends=('clang' 'rapids-cudf' 'gcc8' 'cuda' 'cmake' 'nccl' 'python' 'cython' 'libcypher-parser-static' 'hortnet')
# depends=('clang' 'rapids-cudf' 'gcc8' 'cuda' 'cmake' 'nccl' 'python' 'cython' 'libcypher-parser-static' 'gunrock-static')
# source=("${_pkgname}::git+https://github.com/rapidsai/cugraph.git"
# source=("${_pkgname}::git+https://github.com/rapidsai/cugraph.git#tag=v${_pkgver}"
source=("${_pkgname}::git+https://github.com/rapidsai/cugraph.git#branch=branch-${pkgver}"
#  "git+https://github.com/hornet-gt/hornet.git"
   # "error_utils.h.patch" "renumber.cuh.patch"
#   "cmake.patch"
   "cc.patch"
#   "python.patch"
#   "setup.py.patch"
#  "https://raw.githubusercontent.com/hornet-gt/hornet/master/hornet/include/Hornet.hpp"
  )
#  "${_pkgname2}::git+https://github.com/hornet-gt/hornet.git#tag=0.19.0")

# sha256sums=( 'SKIP')
sha256sums=('SKIP' 'SKIP')
# sha256sums=( 'SKIP' 'SKIP' 'SKIP')
# sha256sums=('SKIP' 'SKIP' 'SKIP' 'SKIP' 'SKIP')



build() {
  cd "${srcdir}"
#  patch -p0 < CMakeLists.txt.patch
#  patch -p0 < testCmakeLists.txt.patch
#  rm cugraph/cpp/cmake/Modules/FindNCCL.cmake
#  patch -p0 < cusparse_helper.cu.patch
#  patch -p0 < error_utils.h.patch
#  patch -p0 < renumber.cuh.patch
#   patch -p0 < setup.py.patch
   patch -p0 < cc.patch
#   patch -p0 < python.patch
#   patch -p0 < cmake.patch
#   patch -p0 < setup.py.patch
  cd "${srcdir}/cugraph"
  git submodule update --init --remote --recursive
export REPODIR="${srcdir}"/cugraph
export LIBCUGRAPH_BUILD_DIR=${LIBCUGRAPH_BUILD_DIR:=${REPODIR}/cpp/build}
export LIBCUGRAPH_ETL_BUILD_DIR=${LIBCUGRAPH_ETL_BUILD_DIR:=${REPODIR}/cpp/libcugraph_etl/build}
export CUGRAPH_BUILD_DIR=${REPODIR}/python/build
export BUILD_DIRS="${LIBCUGRAPH_BUILD_DIR} ${CUGRAPH_BUILD_DIR}"
export VERBOSE_FLAG=""
export BUILD_TYPE=Release
export INSTALL_TARGET=install
export BUILD_DISABLE_DEPRECATION_WARNING=ON
export BUILD_CPP_MG_TESTS=ON
export BUILD_TESTS=ON
export BUILD_STATIC_FAISS=OFF
export GPU_ARCH=86





# export CXXFLAGS="$CFLAGS"

  export CUDA_HOME=/opt/cuda
  export CUDA_BIN_PATH=$CUDA_HOME/bin
  export GPU_ARCHS=86
export CC=/usr/bin/gcc
export CXX=/usr/bin/g++
find python  -name 'CMakeLists.txt' | xargs sed -i -e 's/cugraph::cugraph;cugraph::cugraph_c/cugraph;cugraph_c;fmt;cudart;cusparse;cusolver/g'
find python  -name 'CMakeLists.txt' | xargs sed -i -e 's/cugraph::cugraph/cugraph;fmt;cudart;cusparse;cusolver/g'



}

package_cugraph() {
  privides=('cugraph')
    mkdir -p ${LIBCUGRAPH_BUILD_DIR}
    cd ${LIBCUGRAPH_BUILD_DIR}
    cmake -B "${LIBCUGRAPH_BUILD_DIR}" -S "${REPODIR}/cpp" \
          -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} \
          -DCMAKE_CUDA_ARCHITECTURES=86 \
          -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          -DCMAKE_CXX_COMPILER=/usr/bin/g++ \
          -DCUILD_SHARED_LIBS=ON \
          -DCMAKE_C_COMPILER=/usr/bin/gcc \
          -DDISABLE_DEPRECATION_WARNING=${BUILD_DISABLE_DEPRECATION_WARNING} \
          -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
          -DBUILD_STATIC_FAISS=${BUILD_STATIC_FAISS} \
          -DBUILD_CUGRAPH_MG_TESTS=${BUILD_CPP_MG_TESTS} \
          -DBUILD_TESTS=${BUILD_TESTS} # \
          # ${REPODIR}/cpp
  cd "${srcdir}"/cugraph/cpp/build
  find . -name 'link.txt' | xargs sed -i -e 's/-lpthread/-lpthread -lspdlog/g'
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
          CMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          CMAKE_CUDA_ARCHITECTURES="NATIVE" \
  DESTDIR="${pkgdir}/usr" cmake --build "${srcdir}"/cugraph/cpp/build -v -j12
         make  install DESTDIR="${pkgdir}/usr"

    mkdir -p ${LIBCUGRAPH_ETL_BUILD_DIR}
    cd ${LIBCUGRAPH_ETL_BUILD_DIR}

    cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} \
          -DCMAKE_CUDA_ARCHITECTURES=86 \
          -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          -DCMAKE_CXX_COMPILER=/usr/bin/g++ \
          -DCMAKE_C_COMPILER=/usr/bin/gcc \
          -DBUILD_TESTS=OFF \
          -DDISABLE_DEPRECATION_WARNING=${BUILD_DISABLE_DEPRECATION_WARNING} \
          -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
          -DBUILD_STATIC_FAISS=${BUILD_STATIC_FAISS} \
          -DBUILD_CUGRAPH_MG_TESTS=${BUILD_CPP_MG_TESTS} \
          -DCMAKE_PREFIX_PATH=${LIBCUGRAPH_BUILD_DIR} \
          -DBUILD_TESTS=${BUILD_TESTS} \
          ${REPODIR}/cpp/libcugraph_etl

  cd ${LIBCUGRAPH_ETL_BUILD_DIR}
  find . -name 'link.txt' | xargs sed -i -e 's/-lpthread/-lpthread -lspdlog/g'
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
  DESTDIR="${pkgdir}/usr" cmake --build "${LIBCUGRAPH_ETL_BUILD_DIR}" -v -j12
         make  install DESTDIR="${pkgdir}/usr" 

  # make DESTDIR="${pkgdir}"/usr install
  install -Dm644 ${srcdir}/cugraph/LICENSE ${pkgdir}/usr/share/licenses/cugraph/LICENSE
  rm -rf ${pkgdir}/usr/include/cuco
  rm -rf ${pkgdir}/usr/include/raft
  rm -rf ${pkgdir}/usr/include/rapids
  rm -rf ${pkgdir}/usr/include/rmm
  rm -rf ${pkgdir}/usr/lib/cmake/libcudacxx
  rm -rf ${pkgdir}/usr/lib/cmake/cuco
  rm -rf ${pkgdir}/usr/lib/cmake/cub
  rm -rf ${pkgdir}/usr/lib/cmake/raft
  rm -rf ${pkgdir}/usr/lib/cmake/thrust
  rm -rf ${pkgdir}/usr/lib/cmake/rmm
  # rm ${pkgdir}/usr/lib/libcudftestutil
# mv cugraph/version_config.hpp cugraph/cugraph/
# mv cugraph cugraph-old
# mv cugraph-old/cugraph .
# mv cugraph-old/raft .
# rmdir cugraph-old 

}

package_python-cugraph(){
 depends=('python-curaft' 'python-ucx' 'cugraph' 'python-faiss' 'python-cudf' )
  # if [ ! -d ${src}/cugraph/python/pylibcugraph/_skbuild ]; then
  #       rm -rf ${src}/cugraph/python/pylibcugraph/_skbuild
  # fi
  # mkdir -p  "${srcdir}"/cugraph/python/pylibcugraph/_skbuild/linux-x86_64-3.10/cmake-build
  # cd  "${srcdir}"/cugraph/python/pylibcugraph/_skbuild/linux-x86_64-3.10/cmake-build
  # ln -s "${pkgdir}"/../cugraph/usr/include/* .
  cd "${srcdir}"/cugraph/python/pylibcugraph
  export CFLAGS="${CFLAGS} -I${pkgdir}/../cugraph/usr/include"
  export CXXFLAGS="${CXXFLAGS} -std=c++17 -I${pkgdir}/../cugraph/usr/include"
  export LDFLAGS="${LDFLAGS} -L${pkgdir}/../cugraph/usr/lib"
  export LD_LIBRARY_PATH=${pkgdir}/../cugraph/usr/lib:/opt/cuda/lib64:$LD_LIBRARY_PATH
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
  CMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
  python setup.py build_ext --verbose -lfmt -lcugraph -lcugraph_c --inplace  -- -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -L/opt/cuda/lib64 -L${pkgdir}/../cugraph/usr/lib -lfmt -lcugraph -lcugraph_c" -DCMAKE_CXX_FLAGS="-march=rocketlake -mtune=native -std=c++17 -O3 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS     -DSPDLOG_FMT_EXTERNAL   -I/opt/cuda/include   -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -I${pkgdir}/../cugraph/usr/include " -Dcugraph_DIR=${srcdir}/cugraph/cpp/build -DCMAKE_LIBRARY_PATH="${pkgdir}"/../cugraph/usr/lib -DCMAKE_INCLUDE_PATH="${pkgdir}"/../cugraph/usr/include -DFIND_CUGRAPH_CPP=ON  -DCMAKE_CUDA_ARCHITECTURES=86 -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 VERBOSE=1 -- -j12

  CMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
  python setup.py install  --prefix=/usr --root="${pkgdir}" --optimize=1   -- -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc  -DCMAKE_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -L/opt/cuda/lib64 -L${pkgdir}/../cugraph/usr/lib -lfmt -lcugraph -lcugraph_c" -DCMAKE_CXX_FLAGS="-march=rocketlake -mtune=native -std=c++17 -O3 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS     -DSPDLOG_FMT_EXTERNAL   -I/opt/cuda/include   -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -I${pkgdir}/../cugraph/usr/include " -Dcugraph_DIR=${srcdir}/cugraph/cpp/build -DCMAKE_LIBRARY_PATH="${pkgdir}"/../cugraph/usr/lib -DCMAKE_INCLUDE_PATH="${pkgdir}"/../cugraph/usr/include -DFIND_CUGRAPH_CPP=ON  -DCMAKE_CUDA_ARCHITECTURES=86 -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11  -- -j12


  # if [ ! -d ${src}/cugraph/python/cugraph/_skbuild ]; then
  #        rm -rf ${src}/cugraph/python/cugraph/_skbuild
  # fi
  # mkdir -p  "${srcdir}"/cugraph/python/cugraph/_skbuild/linux-x86_64-3.10/cmake-build
  # cd  "${srcdir}"/cugraph/python/cugraph/_skbuild/linux-x86_64-3.10/cmake-build
  # ln -s "${pkgdir}"/../cugraph/usr/include/* .
  cd "${srcdir}"/cugraph/python/cugraph
  CMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
  python setup.py build_ext --verbose -lfmt -lcugraph -lcugraph_c --inplace  -- -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -L/opt/cuda/lib64 -L${pkgdir}/../cugraph/usr/lib -lfmt -lcugraph -lcugraph_c" -DCMAKE_CXX_FLAGS="-march=rocketlake -mtune=native -std=c++17 -O3 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS     -DSPDLOG_FMT_EXTERNAL   -I/opt/cuda/include   -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -I${pkgdir}/../cugraph/usr/include " -Dcugraph_DIR=${srcdir}/cugraph/cpp/build -DCMAKE_LIBRARY_PATH="${pkgdir}"/../cugraph/usr/lib -DCMAKE_INCLUDE_PATH="${pkgdir}"/../cugraph/usr/include -DFIND_CUGRAPH_CPP=ON  -DCMAKE_CUDA_ARCHITECTURES=86 -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 VERBOSE=1 -- -j12

  CMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
  python setup.py install  --prefix=/usr --root="${pkgdir}" --optimize=1   -- -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -L/opt/cuda/lib64 -L${pkgdir}/../cugraph/usr/lib -lfmt -lcugraph -lcugraph_c" -DCMAKE_CXX_FLAGS="-march=rocketlake -mtune=native -std=c++17 -O3 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS     -DSPDLOG_FMT_EXTERNAL   -I/opt/cuda/include   -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -I${pkgdir}/../cugraph/usr/include " -Dcugraph_DIR=${srcdir}/cugraph/cpp/build -DCMAKE_LIBRARY_PATH="${pkgdir}"/../cugraph/usr/lib -DCMAKE_INCLUDE_PATH="${pkgdir}"/../cugraph/usr/include -DFIND_CUGRAPH_CPP=ON  -DCMAKE_CUDA_ARCHITECTURES=86 -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11  -- -j12

  cd "${srcdir}"/cugraph/python/cugraph-dgl
  CMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
  python setup.py build_ext # --verbose -lfmt -lcugraph -lcugraph_c --inplace  # -- -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -L/opt/cuda/lib64 -L${pkgdir}/../cugraph/usr/lib -lfmt -lcugraph -lcugraph_c" -DCMAKE_CXX_FLAGS="-march=rocketlake -mtune=native -std=c++17 -O3 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS     -DSPDLOG_FMT_EXTERNAL   -I/opt/cuda/include   -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -I${pkgdir}/../cugraph/usr/include " -Dcugraph_DIR=${srcdir}/cugraph/cpp/build -DCMAKE_LIBRARY_PATH="${pkgdir}"/../cugraph/usr/lib -DCMAKE_INCLUDE_PATH="${pkgdir}"/../cugraph/usr/include -DFIND_CUGRAPH_CPP=ON  -DCMAKE_CUDA_ARCHITECTURES=86 -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 VERBOSE=1 -- -j12
  CMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
  python setup.py install  --prefix=/usr --root="${pkgdir}" --optimize=1   # -- -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -L/opt/cuda/lib64 -L${pkgdir}/../cugraph/usr/lib -lfmt -lcugraph -lcugraph_c" -DCMAKE_CXX_FLAGS="-march=rocketlake -mtune=native -std=c++17 -O3 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS     -DSPDLOG_FMT_EXTERNAL   -I/opt/cuda/include   -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -I${pkgdir}/../cugraph/usr/include " -Dcugraph_DIR=${srcdir}/cugraph/cpp/build -DCMAKE_LIBRARY_PATH="${pkgdir}"/../cugraph/usr/lib -DCMAKE_INCLUDE_PATH="${pkgdir}"/../cugraph/usr/include -DFIND_CUGRAPH_CPP=ON  -DCMAKE_CUDA_ARCHITECTURES=86 -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11  -- -j12

  cd "${srcdir}"/cugraph/python/cugraph-pyg
  CMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
  python setup.py build_ext # --verbose -lfmt -lcugraph -lcugraph_c --inplace  -- -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -L/opt/cuda/lib64 -L${pkgdir}/../cugraph/usr/lib -lfmt -lcugraph -lcugraph_c" -DCMAKE_CXX_FLAGS="-march=rocketlake -mtune=native -std=c++17 -O3 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS     -DSPDLOG_FMT_EXTERNAL   -I/opt/cuda/include   -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -I${pkgdir}/../cugraph/usr/include " -Dcugraph_DIR=${srcdir}/cugraph/cpp/build -DCMAKE_LIBRARY_PATH="${pkgdir}"/../cugraph/usr/lib -DCMAKE_INCLUDE_PATH="${pkgdir}"/../cugraph/usr/include -DFIND_CUGRAPH_CPP=ON  -DCMAKE_CUDA_ARCHITECTURES=86 -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 VERBOSE=1 -- -j12
  CMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11 \
          CC=/usr/bin/gcc CXX=/usr/bin/g++ \
  python setup.py install  --prefix=/usr --root="${pkgdir}" --optimize=1 #  -- -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -L/opt/cuda/lib64 -L${pkgdir}/../cugraph/usr/lib -lfmt -lcugraph -lcugraph_c" -DCMAKE_CXX_FLAGS="-march=rocketlake -mtune=native -std=c++17 -O3 -pipe -fno-plt -fexceptions         -Wp,-D_FORTIFY_SOURCE=2,-D_GLIBCXX_ASSERTIONS     -DSPDLOG_FMT_EXTERNAL   -I/opt/cuda/include   -Wformat -Werror=format-security         -fstack-clash-protection -fcf-protection -I${pkgdir}/../cugraph/usr/include " -Dcugraph_DIR=${srcdir}/cugraph/cpp/build -DCMAKE_LIBRARY_PATH="${pkgdir}"/../cugraph/usr/lib -DCMAKE_INCLUDE_PATH="${pkgdir}"/../cugraph/usr/include -DFIND_CUGRAPH_CPP=ON  -DCMAKE_CUDA_ARCHITECTURES=86 -DCMAKE_CUDA_HOST_COMPILER=/usr/bin/g++-11  -- -j12

  # env CUGRAPH_BUILD_PATH=${CUGRAPH_BUILD_PATH} python setup.py install  --prefix=/usr --root="${pkgdir}" --optimize=1
  install -Dm644 ${srcdir}/cugraph/LICENSE ${pkgdir}/usr/share/licenses/python-cugraph/LICENSE
  rm -rf ${pkgdir}/usr/include/cugraph
  rm -rf ${pkgdir}/usr/include/cugraph_c
  rm -rf ${pkgdir}/usr/lib/cmake/cugraph
  rm -rf ${pkgdir}/usr/lib/libcugraph.so
  rm -rf ${pkgdir}/usr/lib/libcugraph_c.so
}





# vim:set ts=2 sw=2 et:
