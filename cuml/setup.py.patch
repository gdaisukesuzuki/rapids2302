*** cuml/python/cuml/manifold/umap.pyx-dist	2022-01-25 22:55:33.931640327 +0900
--- cuml/python/cuml/manifold/umap.pyx	2022-01-25 23:14:48.295407566 +0900
***************
*** 373,383 ****
          else:
              raise Exception("Initialization strategy not supported: %d" % init)
  
!         if a is None or b is None:
!             a, b = self.find_ab_params(spread, min_dist)
! 
!         self.a = a
!         self.b = b
  
          self.learning_rate = learning_rate
          self.min_dist = min_dist
--- 373,383 ----
          else:
              raise Exception("Initialization strategy not supported: %d" % init)
  
!         if a is None or b is None:
!             self.a, self.b = find_ab_params(spread, min_dist)
!         else:
!             self.a = a
!             self.b = b
  
          self.learning_rate = learning_rate
          self.min_dist = min_dist
*** cuml/python/cuml/tests/test_coordinate_descent.py-dist	2022-11-16 23:39:13.195104123 +0900
--- cuml/python/cuml/tests/test_coordinate_descent.py	2022-11-16 23:39:49.179103356 +0900
***************
*** 56,62 ****
      cu_r2 = r2_score(y_test, cu_predict)
  
      if nrows < 500000:
!         sk_lasso = Lasso(alpha=np.array([alpha]), fit_intercept=True,
                           normalize=False, max_iter=1000,
                           selection=algorithm, tol=1e-10)
          sk_lasso.fit(X_train, y_train)
--- 56,62 ----
      cu_r2 = r2_score(y_test, cu_predict)
  
      if nrows < 500000:
!         sk_lasso = Lasso(alpha=alpha, fit_intercept=True,
                           normalize=False, max_iter=1000,
                           selection=algorithm, tol=1e-10)
          sk_lasso.fit(X_train, y_train)
***************
*** 172,178 ****
      cu_r2 = r2_score(y_test, cu_predict)
  
      if nrows < 500000:
!         elastic_sk = ElasticNet(alpha=np.array([alpha]), fit_intercept=True,
                                  normalize=False, max_iter=1000,
                                  selection=algorithm, tol=1e-10)
          elastic_sk.fit(X_train, y_train)
--- 172,178 ----
      cu_r2 = r2_score(y_test, cu_predict)
  
      if nrows < 500000:
!         elastic_sk = ElasticNet(alpha=alpha, fit_intercept=True,
                                  normalize=False, max_iter=1000,
                                  selection=algorithm, tol=1e-10)
          elastic_sk.fit(X_train, y_train)
